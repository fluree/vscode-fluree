{"version":3,"sources":["../webpack/bootstrap",".././node_modules/safer-buffer/safer.js","../external \"stream\"","../external \"buffer\"",".././src/helperFunctions.js","../external \"url\"",".././node_modules/node-fetch/lib/body.js",".././node_modules/node-fetch/lib/headers.js","../external \"vscode\"","../external \"http\"",".././node_modules/node-fetch/lib/fetch-error.js",".././src/extension.js","../external \"fs\"",".././node_modules/isomorphic-fetch/fetch-npm-node.js",".././node_modules/node-fetch/index.js","../external \"https\"","../external \"zlib\"",".././node_modules/encoding/lib/encoding.js",".././node_modules/iconv-lite/lib/index.js",".././node_modules/iconv-lite/lib/bom-handling.js",".././node_modules/iconv-lite/encodings/index.js",".././node_modules/iconv-lite/encodings/internal.js","../external \"string_decoder\"",".././node_modules/iconv-lite/encodings/utf16.js",".././node_modules/iconv-lite/encodings/utf7.js",".././node_modules/iconv-lite/encodings/sbcs-codec.js",".././node_modules/iconv-lite/encodings/sbcs-data.js",".././node_modules/iconv-lite/encodings/sbcs-data-generated.js",".././node_modules/iconv-lite/encodings/dbcs-codec.js",".././node_modules/iconv-lite/encodings/dbcs-data.js",".././node_modules/iconv-lite/lib/streams.js",".././node_modules/iconv-lite/lib/extend-node.js",".././node_modules/encoding/lib/iconv-loader.js",".././node_modules/encoding/lib sync",".././node_modules/is-stream/index.js","../external \"util\"",".././node_modules/node-fetch/lib/response.js",".././node_modules/node-fetch/lib/request.js",".././src/smartFunctionList.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","buffer","Buffer","safer","Safer","from","Uint8Array","encodingOrOffset","length","TypeError","alloc","size","fill","encoding","RangeError","buf","kStringMaxLength","process","binding","e","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","require","fs","vscode","fetch","getConfigFile","res","uri","workspace","openTextDocument","then","doc","text","getText","JSON","parse","network","db","ip","catch","err","window","showErrorMessage","message","getCurrentSelection","editor","activeTextEditor","selection","document","sendReq","endpoint","body","root","headers","Content-Type","method","response","json","assign","error","stringify","parseJSON","filePath","txt","writeFileSync","writeToFile","status","showInformationMessage","checkExitPromise","exitedFunction","undefined","Error","convert","bodyStream","PassThrough","FetchError","Body","opts","this","bodyUsed","timeout","_raw","_abort","self","_decode","toString","Promise","reject","url","_bytes","resolve","resTimeout","_convert","setTimeout","on","chunk","push","clearTimeout","str","ct","charset","test","concat","exec","substr","pop","_clone","instance","p1","p2","getBoundary","pipe","global","Headers","prop","_headers","raw","set","isNaN","Array","isArray","forEach","item","append","list","toLowerCase","getAll","has","callback","thisArg","getOwnPropertyNames","type","systemError","constructor","code","errno","captureStackTrace","inherits","smartFunctions","activate","context","config","rootPath","setConfig","commands","registerCommand","findFiles","myConfig","showInputBox","prompt","getConfig","submitTransaction","keys","txn","submitQuery","submitQueryWith","submitGenFlakes","submitTestTransactWith","smartFunctionHelp","selectedSmartFuncion","smartFunctionNames","showQuickPick","placeHolder","subscriptions","deactivate","realFetch","options","Response","Request","resolve_url","http","https","zlib","stream","Fetch","send","protocol","hostname","request","compress","agent","byteLength","getLengthSync","_lengthRetrievers","hasKnownLength","host","reqTimeout","req","once","socket","abort","isRedirect","statusCode","redirect","counter","follow","location","output","response_options","statusText","statusMessage","createGunzip","createInflate","createInflateRaw","write","end","default","iconvLite","Iconv","convertIconvLite","to","decode","encode","checkEncoding","trim","replace","toUpperCase","useLite","result","iconv","slice","convertIconv","E","console","bomHandling","encodings","defaultCharUnicode","defaultCharSingleByte","encoder","getEncoder","trail","skipDecodeWarning","decoder","getDecoder","encodingExists","enc","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecOptions","codec","codecDef","encodingName","bomAware","addBOM","PrependBOM","stripBOM","StripBOM","nodeVer","versions","node","nodeVerArr","split","map","Number","PrependBOMWrapper","StripBOMWrapper","pass","InternalCodec","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","completeQuads","bufIdx","charCode","charCodeAt","curByte","String","fromCharCode","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","asciiCharsLE","asciiCharsBE","_len","Math","min","utf16be","tmp","buf2","j","utf16","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","uChar","base64IMAPChars","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","newBuf","idx1","idx2","10029","maccenteuro","808","ibm808","cp808","mik","ascii8bit","usascii","ansix34","ansix341968","ansix341986","csascii","cp367","ibm367","isoir6","iso646us","iso646irv","us","latin1","latin2","latin3","latin4","latin5","latin6","latin7","latin8","latin9","latin10","csisolatin1","csisolatin2","csisolatin3","csisolatin4","csisolatincyrillic","csisolatinarabic","csisolatingreek","csisolatinhebrew","csisolatin5","csisolatin6","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","isoir14","isoir57","isoir100","isoir101","isoir109","isoir110","isoir144","isoir127","isoir126","isoir138","isoir148","isoir157","isoir166","isoir179","isoir199","isoir203","isoir226","cp819","ibm819","cyrillic","arabic","arabic8","ecma114","asmo708","greek","greek8","ecma118","elot928","hebrew","hebrew8","turkish","turkish8","thai","thai8","celtic","celtic8","isoceltic","tis6200","tis62025291","tis62025330","10000","10006","10007","10079","10081","cspc8codepage437","cspc775baltic","cspc850multilingual","cspcp852","cspc862latinhebrew","cpgr","msee","mscyrl","msansi","msgreek","msturk","mshebr","msarab","winbaltrim","cp20866","20866","ibm878","cskoi8r","cp21866","21866","ibm1168","strk10482002","tcvn5712","tcvn57121","gb198880","cn","csiso14jisc6220ro","jisc62201969ro","jp","cshproman8","r8","roman8","xroman8","ibm1051","mac","csmacintosh","437","737","775","850","852","855","856","857","858","860","861","862","863","864","865","866","869","874","922","1046","1124","1125","1129","1133","1161","1162","1163","1250","1251","1252","1253","1254","1255","1256","1257","1258","28591","28592","28593","28594","28595","28596","28597","28598","28599","28600","28601","28603","28604","28605","28606","windows874","win874","cp874","windows1250","win1250","cp1250","windows1251","win1251","cp1251","windows1252","win1252","cp1252","windows1253","win1253","cp1253","windows1254","win1254","cp1254","windows1255","win1255","cp1255","windows1256","win1256","cp1256","windows1257","win1257","cp1257","windows1258","win1258","cp1258","iso88591","cp28591","iso88592","cp28592","iso88593","cp28593","iso88594","cp28594","iso88595","cp28595","iso88596","cp28596","iso88597","cp28597","iso88598","cp28598","iso88599","cp28599","iso885910","cp28600","iso885911","cp28601","iso885913","cp28603","iso885914","cp28604","iso885915","cp28605","iso885916","cp28606","cp437","ibm437","csibm437","cp737","ibm737","csibm737","cp775","ibm775","csibm775","cp850","ibm850","csibm850","cp852","ibm852","csibm852","cp855","ibm855","csibm855","cp856","ibm856","csibm856","cp857","ibm857","csibm857","cp858","ibm858","csibm858","cp860","ibm860","csibm860","cp861","ibm861","csibm861","cp862","ibm862","csibm862","cp863","ibm863","csibm863","cp864","ibm864","csibm864","cp865","ibm865","csibm865","cp866","ibm866","csibm866","cp869","ibm869","csibm869","cp922","ibm922","csibm922","cp1046","ibm1046","csibm1046","cp1124","ibm1124","csibm1124","cp1125","ibm1125","csibm1125","cp1129","ibm1129","csibm1129","cp1133","ibm1133","csibm1133","cp1161","ibm1161","csibm1161","cp1162","ibm1162","csibm1162","cp1163","ibm1163","csibm1163","maccroatian","maccyrillic","macgreek","maciceland","macroman","macromania","macthai","macturkish","macukraine","koi8r","koi8u","koi8ru","koi8t","armscii8","rk1048","tcvn","georgianacademy","georgianps","pt154","viscii","iso646cn","iso646jp","hproman8","macintosh","ascii","tis620","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","NODE_START","UNASSIGNED_NODE","table","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","val","_fillEncodeTable","encodeAdd","_setEncodeChar","defCharSB","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBuf","findIdx","mid","floor","_getDecodeTrieNode","addr","bytes","curAddr","parseInt","writeTable","k","part","codeTrail","len","seq","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","prefix","mbCode","nextChar","resCode","subtable","idx","uChars","gbChars","prevBufOffset","seqStart","curSeq","ptr","uCodeLead","ret","shiftjis","¥","‾","csshiftjis","mskanji","sjis","windows31j","ms31j","xsjis","windows932","ms932","932","cp932","eucjp","gb2312","gb231280","gb23121980","csgb2312","csiso58gb231280","euccn","windows936","ms936","936","cp936","gbk","xgbk","isoir58","€","chinese","windows949","ms949","949","cp949","cseuckr","csksc56011987","euckr","isoir149","korean","ksc56011987","ksc56011989","ksc5601","windows950","ms950","950","cp950","big5","big5hkscs","cnbig5","csbig5","xxbig5","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","encodeStream","decodeStream","supportsStreams","_collect","collect","_transform","done","_flush","cb","chunks","isBuffer","original","supportsNodeEncodingsExtension","extendNodeEncodings","nodeNativeEncodings","utf-8","ucs-2","utf-16le","isNativeEncoding","SlowBuffer","SlowBufferToString","start","SlowBufferWrite","string","offset","isFinite","swap","remaining","copy","BufferIsEncoding","isEncoding","BufferByteLength","BufferToString","BufferWrite","_offset","_length","_encoding","Readable","ReadableSetEncoding","setEncoding","_readableState","undoExtendNodeEncodings","webpackEmptyContext","id","isStream","writable","_write","_writableState","readable","_read","duplex","transform","_transformState","STATUS_CODES","ok","clone","parse_url","input","init","url_parsed","port","path","auth","inc","arguments","examples","seeAlso","dec","example","now","==","+","-","*","/",">",">=","<","<=","quot","rem","mod","max","max-pred-val","if-else","and","or","boolean","nil?","count","contains?","hash-set","upper-case","lower-case","nth","get-all","valid-email?","re-find","query","?s","?sid","?p","?pid","?o","?pO","?auth_id","flakes","objT","objF","relationship?"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","module.exports = require(\"stream\");","module.exports = require(\"buffer\");","\nconst fs = require('fs');\nconst vscode = require('vscode');\nconst fetch = require('isomorphic-fetch');\n\nfunction writeToFile(filePath, txt){\n\tlet body = typeof(txt) === \"string\" ? txt : JSON.stringify(txt, null, 2);\n\treturn fs.writeFileSync(filePath, body);\n}\n\nfunction getConfigFile(res){\n\tlet uri = res[0][\"path\"]\n\treturn vscode.workspace.openTextDocument(uri).then(doc => {\n\t\tlet text= doc.getText();\n\t\ttext = JSON.parse(text)\n\t\tlet { network, db, ip } = text;\n\t\treturn { network: network, db: db, ip: ip };\n\t})\n\t.catch(err => vscode.window.showErrorMessage(err.message))\n}\n\nfunction getCurrentSelection(){\n\t// From https://stackoverflow.com/questions/44175461/get-selected-text-into-a-variable-vscode\n\tconst editor = vscode.window.activeTextEditor; \n\tvar selection = editor.selection; \n\tvar text = editor.document.getText(selection);\n\treturn text;\n}\n\nfunction parseJSON(response) {\n\treturn response.json()\n\t.then(function (json) {\n\t\tconst newResponse = Object.assign(response, { json });\n\t\treturn newResponse;\n\t})\n\t.catch(err => {\n\t\tlet error = err.message || err;\n\t\tvscode.window.showErrorMessage(JSON.stringify(error))\n\t})\n  }\n\nfunction sendReq(endpoint, body, root){\n\tconst headers = {'Content-Type': 'application/json'}\n\n\tconst fetchOpts = {  \n\t\theaders: headers,\n\t\tmethod: \"POST\", \n\t\tbody: body\n\t};\n\n\treturn fetch(endpoint, fetchOpts)\n\t.then(res => parseJSON(res))\n\t.then(res => res.json)\n\t.then(res => {\n\t\tconst filePath = `${root}/flureeResponse.txt`;\n\t\twriteToFile(filePath, res)\n\t\treturn res;\n\t})\n\t.then(res => {\n\t\tlet status = res.status;\n\t\tif(res.error === \"db/invalid-action\"){\n\t\t\treturn vscode.window.showInformationMessage(` Are you using a version of Fluree that supports this endpoint? ${status ? `Status: ${status}`: '' }. Check flureeResponse.txt`)\n\t\t} else {\n\t\t\treturn vscode.window.showInformationMessage(`Submitted. ${status ? `Status: ${status}`: '' } Check flureeResponse.txt`)\n\t\t}\n\t})\n\t.catch(err => {\n\t\tlet error = err.message || err;\n\t\tvscode.window.showErrorMessage(JSON.stringify(error))\n\t})\n}\n\nfunction checkExitPromise(res, exitedFunction){\n\tif(res === undefined){\t\n\t\tthrow new Error(`The user exited ${exitedFunction}`)\n\t} \n\telse {\t\n\t\treturn true\t\n\t}\n}\n\n\nmodule.exports = {\n\tgetConfigFile,\n\tgetCurrentSelection,\n\tsendReq,\n\tcheckExitPromise\n};","module.exports = require(\"url\");","\n/**\n * body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nvar convert = require('encoding').convert;\nvar bodyStream = require('is-stream');\nvar PassThrough = require('stream').PassThrough;\nvar FetchError = require('./fetch-error');\n\nmodule.exports = Body;\n\n/**\n * Body class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body, opts) {\n\n\topts = opts || {};\n\n\tthis.body = body;\n\tthis.bodyUsed = false;\n\tthis.size = opts.size || 0;\n\tthis.timeout = opts.timeout || 0;\n\tthis._raw = [];\n\tthis._abort = false;\n\n}\n\n/**\n * Decode response as json\n *\n * @return  Promise\n */\nBody.prototype.json = function() {\n\n\tvar self = this;\n\n\treturn this._decode().then(function(buffer) {\n\t\ttry {\n\t\t\treturn JSON.parse(buffer.toString());\n\t\t} catch (err) {\n\t\t\treturn Body.Promise.reject(new FetchError('invalid json response body at ' + self.url + ' reason: ' + err.message, 'invalid-json'));\n\t\t}\n\t});\n\n};\n\n/**\n * Decode response as text\n *\n * @return  Promise\n */\nBody.prototype.text = function() {\n\n\treturn this._decode().then(function(buffer) {\n\t\treturn buffer.toString();\n\t});\n\n};\n\n/**\n * Decode response as buffer (non-spec api)\n *\n * @return  Promise\n */\nBody.prototype.buffer = function() {\n\n\treturn this._decode();\n\n};\n\n/**\n * Decode buffers into utf-8 string\n *\n * @return  Promise\n */\nBody.prototype._decode = function() {\n\n\tvar self = this;\n\n\tif (this.bodyUsed) {\n\t\treturn Body.Promise.reject(new Error('body used already for: ' + this.url));\n\t}\n\n\tthis.bodyUsed = true;\n\tthis._bytes = 0;\n\tthis._abort = false;\n\tthis._raw = [];\n\n\treturn new Body.Promise(function(resolve, reject) {\n\t\tvar resTimeout;\n\n\t\t// body is string\n\t\tif (typeof self.body === 'string') {\n\t\t\tself._bytes = self.body.length;\n\t\t\tself._raw = [new Buffer(self.body)];\n\t\t\treturn resolve(self._convert());\n\t\t}\n\n\t\t// body is buffer\n\t\tif (self.body instanceof Buffer) {\n\t\t\tself._bytes = self.body.length;\n\t\t\tself._raw = [self.body];\n\t\t\treturn resolve(self._convert());\n\t\t}\n\n\t\t// allow timeout on slow response body\n\t\tif (self.timeout) {\n\t\t\tresTimeout = setTimeout(function() {\n\t\t\t\tself._abort = true;\n\t\t\t\treject(new FetchError('response timeout at ' + self.url + ' over limit: ' + self.timeout, 'body-timeout'));\n\t\t\t}, self.timeout);\n\t\t}\n\n\t\t// handle stream error, such as incorrect content-encoding\n\t\tself.body.on('error', function(err) {\n\t\t\treject(new FetchError('invalid response body at: ' + self.url + ' reason: ' + err.message, 'system', err));\n\t\t});\n\n\t\t// body is stream\n\t\tself.body.on('data', function(chunk) {\n\t\t\tif (self._abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (self.size && self._bytes + chunk.length > self.size) {\n\t\t\t\tself._abort = true;\n\t\t\t\treject(new FetchError('content size at ' + self.url + ' over limit: ' + self.size, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself._bytes += chunk.length;\n\t\t\tself._raw.push(chunk);\n\t\t});\n\n\t\tself.body.on('end', function() {\n\t\t\tif (self._abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\t\t\tresolve(self._convert());\n\t\t});\n\t});\n\n};\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   String  encoding  Target encoding\n * @return  String\n */\nBody.prototype._convert = function(encoding) {\n\n\tencoding = encoding || 'utf-8';\n\n\tvar ct = this.headers.get('content-type');\n\tvar charset = 'utf-8';\n\tvar res, str;\n\n\t// header\n\tif (ct) {\n\t\t// skip encoding detection altogether if not html/xml/plain text\n\t\tif (!/text\\/html|text\\/plain|\\+xml|\\/xml/i.test(ct)) {\n\t\t\treturn Buffer.concat(this._raw);\n\t\t}\n\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tif (!res && this._raw.length > 0) {\n\t\tfor (var i = 0; i < this._raw.length; i++) {\n\t\t\tstr += this._raw[i].toString()\n\t\t\tif (str.length > 1024) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstr = str.substr(0, 1024);\n\t}\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(\n\t\tBuffer.concat(this._raw)\n\t\t, encoding\n\t\t, charset\n\t);\n\n};\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nBody.prototype._clone = function(instance) {\n\tvar p1, p2;\n\tvar body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (bodyStream(body) && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance.body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n","\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nmodule.exports = Headers;\n\n/**\n * Headers class\n *\n * @param   Object  headers  Response headers\n * @return  Void\n */\nfunction Headers(headers) {\n\n\tvar self = this;\n\tthis._headers = {};\n\n\t// Headers\n\tif (headers instanceof Headers) {\n\t\theaders = headers.raw();\n\t}\n\n\t// plain object\n\tfor (var prop in headers) {\n\t\tif (!headers.hasOwnProperty(prop)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (typeof headers[prop] === 'string') {\n\t\t\tthis.set(prop, headers[prop]);\n\n\t\t} else if (typeof headers[prop] === 'number' && !isNaN(headers[prop])) {\n\t\t\tthis.set(prop, headers[prop].toString());\n\n\t\t} else if (Array.isArray(headers[prop])) {\n\t\t\theaders[prop].forEach(function(item) {\n\t\t\t\tself.append(prop, item.toString());\n\t\t\t});\n\t\t}\n\t}\n\n}\n\n/**\n * Return first header value given name\n *\n * @param   String  name  Header name\n * @return  Mixed\n */\nHeaders.prototype.get = function(name) {\n\tvar list = this._headers[name.toLowerCase()];\n\treturn list ? list[0] : null;\n};\n\n/**\n * Return all header values given name\n *\n * @param   String  name  Header name\n * @return  Array\n */\nHeaders.prototype.getAll = function(name) {\n\tif (!this.has(name)) {\n\t\treturn [];\n\t}\n\n\treturn this._headers[name.toLowerCase()];\n};\n\n/**\n * Iterate over all headers\n *\n * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n * @param   Boolean   thisArg   `this` context for callback function\n * @return  Void\n */\nHeaders.prototype.forEach = function(callback, thisArg) {\n\tObject.getOwnPropertyNames(this._headers).forEach(function(name) {\n\t\tthis._headers[name].forEach(function(value) {\n\t\t\tcallback.call(thisArg, value, name, this)\n\t\t}, this)\n\t}, this)\n}\n\n/**\n * Overwrite header values given name\n *\n * @param   String  name   Header name\n * @param   String  value  Header value\n * @return  Void\n */\nHeaders.prototype.set = function(name, value) {\n\tthis._headers[name.toLowerCase()] = [value];\n};\n\n/**\n * Append a value onto existing header\n *\n * @param   String  name   Header name\n * @param   String  value  Header value\n * @return  Void\n */\nHeaders.prototype.append = function(name, value) {\n\tif (!this.has(name)) {\n\t\tthis.set(name, value);\n\t\treturn;\n\t}\n\n\tthis._headers[name.toLowerCase()].push(value);\n};\n\n/**\n * Check for header name existence\n *\n * @param   String   name  Header name\n * @return  Boolean\n */\nHeaders.prototype.has = function(name) {\n\treturn this._headers.hasOwnProperty(name.toLowerCase());\n};\n\n/**\n * Delete all header values given name\n *\n * @param   String  name  Header name\n * @return  Void\n */\nHeaders.prototype['delete'] = function(name) {\n\tdelete this._headers[name.toLowerCase()];\n};\n\n/**\n * Return raw headers (non-spec api)\n *\n * @return  Object\n */\nHeaders.prototype.raw = function() {\n\treturn this._headers;\n};\n","module.exports = require(\"vscode\");","module.exports = require(\"http\");","\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\nmodule.exports = FetchError;\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n\n\tthis.name = this.constructor.name;\n\tthis.message = message;\n\tthis.type = type;\n\n\t// when err.type is `system`, err.code contains system error code\n\tif (systemError) {\n\t\tthis.code = this.errno = systemError.code;\n\t}\n\n\t// hide custom error implementation details from end-users\n\tError.captureStackTrace(this, this.constructor);\n}\n\nrequire('util').inherits(FetchError, Error);\n","const vscode = require('vscode');\nconst getConfigFile = require('./helperFunctions').getConfigFile;\nconst getCurrentSelection = require('./helperFunctions').getCurrentSelection;\nconst sendReq = require('./helperFunctions').sendReq;\nconst checkExitPromise = require('./helperFunctions').checkExitPromise;\nconst smartFunctions = require('./smartFunctionList').smartFunctions;\n\n/**\n * @param {vscode.ExtensionContext} context\n */\n\nfunction activate(context) {\n\t// A shared state object\n\tlet config = {};\n\tlet root = vscode.workspace.rootPath;\n\n\tlet setConfig = vscode.commands.registerCommand('extension.setConfig', function(){\n\t\tvscode.workspace.findFiles('flureeConfig.json', null, 1)\n\t\t.then(res => {\n\t\t\tif(res.length === 0){\n\t\t\t\tlet myConfig = {}\n\t\t\t\treturn vscode.window.showInputBox({prompt: `No 'flureeConfig.json' found. Please input the IP address where your db is running: `, value: \"IP\"})\n\t\t\t\t.then(res => {\n\t\t\t\t\tmyConfig[\"ip\"] = res;\n\t\t\t\t\treturn vscode.window.showInputBox({prompt: `Please input the network your database is in: `, value: \"Network\"})\n\t\t\t\t})\n\t\t\t\t.then(res => {\n\t\t\t\t\tmyConfig[\"network\"] = res;\n\t\t\t\t\treturn vscode.window.showInputBox({prompt: `Please input your database name: `, value: \"Database\"})\n\t\t\t\t})\n\t\t\t\t.then(res => {\n\t\t\t\t\tmyConfig[\"db\"] = res;\n\t\t\t\t\treturn myConfig\n\t\t\t\t})\n\t\t\t\t.catch(err => vscode.showErrorMessage(\"There was an error in setting the configuration. \", JSON.stringify(err)))\n\t\t\t} else {\n\t\t\t\treturn getConfigFile(res)\n\t\t\t}\n\t\t})\n\t\t.then(res => config = res)\n\t\t.then(res => vscode.window.showInformationMessage(\"Config set. \" + \"Network: \" + config.network + \" Db: \" +\n\t\tconfig.db + \" IP: \" + config.ip ))\n\t\t.catch(err => vscode.showErrorMessage(\"There was an error in setting the configuration. \", JSON.stringify(err)))\n\t})\n\n\tlet getConfig = vscode.commands.registerCommand('extension.getConfig', function(){\n\t\tvscode.window.showInformationMessage(\"Config. \" + \"Network: \" + config.network + \" Db: \" +\n\t\tconfig.db + \" IP: \" + config.ip )\n\t})\n\n\tlet submitTransaction = vscode.commands.registerCommand('extension.submitTransaction', function(){\n\t\tif (Object.keys(config).length === 0){\n\t\t\tvscode.window.showErrorMessage(\"Please connect to a database first. `Fluree: Set Config`\")\n\t\t} else {\n\t\t\tlet txn =  getCurrentSelection();\n\t\t\tlet endpoint = `${config.ip}/fdb/${config.network}/${config.db}/transact`;\n\t\t\treturn sendReq(endpoint, txn, root)\n\t\t}\n\t})\n\n\tlet submitQuery = vscode.commands.registerCommand('extension.submitQuery', function(){\n\t\tif (Object.keys(config).length === 0){\n\t\t\tvscode.window.showErrorMessage(\"Please connect to a database first. `Fluree: Set Config`\")\n\t\t} else {\n\t\t\tlet txn =  getCurrentSelection();\n\t\t\tlet endpoint = `${config.ip}/fdb/${config.network}/${config.db}/query`\n\t\t\treturn sendReq(endpoint, txn, root)\n\t\t}\n\t})\n\n\tlet submitQueryWith = vscode.commands.registerCommand('extension.submitQueryWith', function(){\n\t\tif (Object.keys(config).length === 0){\n\t\t\tvscode.window.showErrorMessage(\"Please connect to a database first. `Fluree: Set Config`\")\n\t\t} else {\n\t\t\tlet txn =  getCurrentSelection();\n\t\t\tlet endpoint = `${config.ip}/fdb/${config.network}/${config.db}/query-with`\n\t\t\treturn sendReq(endpoint, txn, root)\n\t\t}\n\t})\n\n\tlet submitGenFlakes = vscode.commands.registerCommand('extension.submitGenFlakes', function(){\n\t\tif (Object.keys(config).length === 0){\n\t\t\tvscode.window.showErrorMessage(\"Please connect to a database first. `Fluree: Set Config`\")\n\t\t} else {\n\t\t\tlet txn =  getCurrentSelection();\n\t\t\tlet endpoint = `${config.ip}/fdb/${config.network}/${config.db}/gen-flakes`\n\t\t\treturn sendReq(endpoint, txn, root)\n\t\t}\n\t})\n\n\tlet submitTestTransactWith = vscode.commands.registerCommand('extension.submitTestTransactWith', function(){\n\t\tif (Object.keys(config).length === 0){\n\t\t\tvscode.window.showErrorMessage(\"Please connect to a database first. `Fluree: Set Config`\")\n\t\t} else {\n\t\t\tlet txn =  getCurrentSelection();\n\t\t\tlet endpoint = `${config.ip}/fdb/${config.network}/${config.db}/test-transact-with`\n\t\t\treturn sendReq(endpoint, txn, root)\n\t\t}\n\t})\n\t\n\tlet smartFunctionHelp = vscode.commands.registerCommand('extension.smartFunctionHelp', function(){\n\t\tlet smartFunctionNames = Object.keys(smartFunctions);\n\t\tlet selectedSmartFuncion; \n\t\tvscode.window.showQuickPick(smartFunctionNames, {placeHolder: \"Which smart function do you want to learn more about?\"})\n\t\t.then(res => {\n\t\t\tselectedSmartFuncion = smartFunctions[res];\n\t\t\treturn vscode.window.showInputBox({prompt: `Documentation: ${selectedSmartFuncion[\"doc\"]}`, value: \"Press enter to see more\"});\n\t\t})\n\t\t.then(res => {\n\t\t\tif(checkExitPromise(res, \"smart function help.\")){\n\t\t\t\treturn vscode.window.showInputBox({prompt: `Arguments: ${selectedSmartFuncion[\"arguments\"]}`, value: \"Press enter to see more\"})\n\t\t}})\n\t\t.then(res => {\n\t\t\tif(checkExitPromise(res, \"smart function help.\")){\n\t\t\t\treturn vscode.window.showInputBox({prompt: `Examples: ${selectedSmartFuncion[\"example\"]}`, value: \"Press enter to see more\" })\n\t\t}})\n\t\t.then(res => {\n\t\t\tif(checkExitPromise(res, \"smart function help.\")){\n\t\t\t\treturn vscode.window.showInputBox({prompt: `Context: ${selectedSmartFuncion[\"context\"]}`, value: `${selectedSmartFuncion[\"seeAlso\"] ? \"Press enter to see more\" : \"\"}`})\n\t\t}})\n\t\t.then(res => {\n\t\t\t\tif(selectedSmartFuncion[\"seeAlso\"]){\n\t\t\t\t\tif(checkExitPromise(res, \"smart function help.\")){\n\t\t\t\t\t\treturn vscode.window.showInputBox({prompt: `See Also: ${selectedSmartFuncion[\"seeAlso\"]}`})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t})\n\t\t.catch(err => vscode.window.showErrorMessage(\"Error: \" + err.message))\n\t})\n\n\tcontext.subscriptions.push(\n\t\tsetConfig, \n\t\tgetConfig, \n\t\tsubmitTransaction,\n\t\tsubmitQuery,\n\t\tsubmitQueryWith,\n\t\tsubmitGenFlakes,\n\t\tsubmitTestTransactWith,\n\t\tsmartFunctionHelp\n\t\t);\n}\n\nexports.activate = activate;\n\n// this method is called when your extension is deactivated\nfunction deactivate() {}\n\nmodule.exports = {\n\tactivate,\n\tdeactivate\n}\n","module.exports = require(\"fs\");","\"use strict\";\n\nvar realFetch = require('node-fetch');\nmodule.exports = function(url, options) {\n\tif (/^\\/\\//.test(url)) {\n\t\turl = 'https:' + url;\n\t}\n\treturn realFetch.call(this, url, options);\n};\n\nif (!global.fetch) {\n\tglobal.fetch = module.exports;\n\tglobal.Response = realFetch.Response;\n\tglobal.Headers = realFetch.Headers;\n\tglobal.Request = realFetch.Request;\n}\n","\n/**\n * index.js\n *\n * a request API compatible with window.fetch\n */\n\nvar parse_url = require('url').parse;\nvar resolve_url = require('url').resolve;\nvar http = require('http');\nvar https = require('https');\nvar zlib = require('zlib');\nvar stream = require('stream');\n\nvar Body = require('./lib/body');\nvar Response = require('./lib/response');\nvar Headers = require('./lib/headers');\nvar Request = require('./lib/request');\nvar FetchError = require('./lib/fetch-error');\n\n// commonjs\nmodule.exports = Fetch;\n// es6 default export compatibility\nmodule.exports.default = module.exports;\n\n/**\n * Fetch class\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction Fetch(url, opts) {\n\n\t// allow call as function\n\tif (!(this instanceof Fetch))\n\t\treturn new Fetch(url, opts);\n\n\t// allow custom promise\n\tif (!Fetch.Promise) {\n\t\tthrow new Error('native promise missing, set Fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = Fetch.Promise;\n\n\tvar self = this;\n\n\t// wrap http.request into fetch\n\treturn new Fetch.Promise(function(resolve, reject) {\n\t\t// build request object\n\t\tvar options = new Request(url, opts);\n\n\t\tif (!options.protocol || !options.hostname) {\n\t\t\tthrow new Error('only absolute urls are supported');\n\t\t}\n\n\t\tif (options.protocol !== 'http:' && options.protocol !== 'https:') {\n\t\t\tthrow new Error('only http(s) protocols are supported');\n\t\t}\n\n\t\tvar send;\n\t\tif (options.protocol === 'https:') {\n\t\t\tsend = https.request;\n\t\t} else {\n\t\t\tsend = http.request;\n\t\t}\n\n\t\t// normalize headers\n\t\tvar headers = new Headers(options.headers);\n\n\t\tif (options.compress) {\n\t\t\theaders.set('accept-encoding', 'gzip,deflate');\n\t\t}\n\n\t\tif (!headers.has('user-agent')) {\n\t\t\theaders.set('user-agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t\t}\n\n\t\tif (!headers.has('connection') && !options.agent) {\n\t\t\theaders.set('connection', 'close');\n\t\t}\n\n\t\tif (!headers.has('accept')) {\n\t\t\theaders.set('accept', '*/*');\n\t\t}\n\n\t\t// detect form data input from form-data module, this hack avoid the need to pass multipart header manually\n\t\tif (!headers.has('content-type') && options.body && typeof options.body.getBoundary === 'function') {\n\t\t\theaders.set('content-type', 'multipart/form-data; boundary=' + options.body.getBoundary());\n\t\t}\n\n\t\t// bring node-fetch closer to browser behavior by setting content-length automatically\n\t\tif (!headers.has('content-length') && /post|put|patch|delete/i.test(options.method)) {\n\t\t\tif (typeof options.body === 'string') {\n\t\t\t\theaders.set('content-length', Buffer.byteLength(options.body));\n\t\t\t// detect form data input from form-data module, this hack avoid the need to add content-length header manually\n\t\t\t} else if (options.body && typeof options.body.getLengthSync === 'function') {\n\t\t\t\t// for form-data 1.x\n\t\t\t\tif (options.body._lengthRetrievers && options.body._lengthRetrievers.length == 0) {\n\t\t\t\t\theaders.set('content-length', options.body.getLengthSync().toString());\n\t\t\t\t// for form-data 2.x\n\t\t\t\t} else if (options.body.hasKnownLength && options.body.hasKnownLength()) {\n\t\t\t\t\theaders.set('content-length', options.body.getLengthSync().toString());\n\t\t\t\t}\n\t\t\t// this is only necessary for older nodejs releases (before iojs merge)\n\t\t\t} else if (options.body === undefined || options.body === null) {\n\t\t\t\theaders.set('content-length', '0');\n\t\t\t}\n\t\t}\n\n\t\toptions.headers = headers.raw();\n\n\t\t// http.request only support string as host header, this hack make custom host header possible\n\t\tif (options.headers.host) {\n\t\t\toptions.headers.host = options.headers.host[0];\n\t\t}\n\n\t\t// send request\n\t\tvar req = send(options);\n\t\tvar reqTimeout;\n\n\t\tif (options.timeout) {\n\t\t\treq.once('socket', function(socket) {\n\t\t\t\treqTimeout = setTimeout(function() {\n\t\t\t\t\treq.abort();\n\t\t\t\t\treject(new FetchError('network timeout at: ' + options.url, 'request-timeout'));\n\t\t\t\t}, options.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function(err) {\n\t\t\tclearTimeout(reqTimeout);\n\t\t\treject(new FetchError('request to ' + options.url + ' failed, reason: ' + err.message, 'system', err));\n\t\t});\n\n\t\treq.on('response', function(res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\t// handle redirect\n\t\t\tif (self.isRedirect(res.statusCode) && options.redirect !== 'manual') {\n\t\t\t\tif (options.redirect === 'error') {\n\t\t\t\t\treject(new FetchError('redirect mode is set to error: ' + options.url, 'no-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (options.counter >= options.follow) {\n\t\t\t\t\treject(new FetchError('maximum redirect reached at: ' + options.url, 'max-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!res.headers.location) {\n\t\t\t\t\treject(new FetchError('redirect location header missing at: ' + options.url, 'invalid-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// per fetch spec, for POST request with 301/302 response, or any request with 303 response, use GET when following redirect\n\t\t\t\tif (res.statusCode === 303\n\t\t\t\t\t|| ((res.statusCode === 301 || res.statusCode === 302) && options.method === 'POST'))\n\t\t\t\t{\n\t\t\t\t\toptions.method = 'GET';\n\t\t\t\t\tdelete options.body;\n\t\t\t\t\tdelete options.headers['content-length'];\n\t\t\t\t}\n\n\t\t\t\toptions.counter++;\n\n\t\t\t\tresolve(Fetch(resolve_url(options.url, res.headers.location), options));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// normalize location header for manual redirect mode\n\t\t\tvar headers = new Headers(res.headers);\n\t\t\tif (options.redirect === 'manual' && headers.has('location')) {\n\t\t\t\theaders.set('location', resolve_url(options.url, headers.get('location')));\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tvar body = res.pipe(new stream.PassThrough());\n\t\t\tvar response_options = {\n\t\t\t\turl: options.url\n\t\t\t\t, status: res.statusCode\n\t\t\t\t, statusText: res.statusMessage\n\t\t\t\t, headers: headers\n\t\t\t\t, size: options.size\n\t\t\t\t, timeout: options.timeout\n\t\t\t};\n\n\t\t\t// response object\n\t\t\tvar output;\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no content-encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!options.compress || options.method === 'HEAD' || !headers.has('content-encoding') || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\tresolve(output);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, check for gzip or deflate\n\t\t\tvar name = headers.get('content-encoding');\n\n\t\t\t// for gzip\n\t\t\tif (name == 'gzip' || name == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip());\n\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\tresolve(output);\n\t\t\t\treturn;\n\n\t\t\t// for deflate\n\t\t\t} else if (name == 'deflate' || name == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tvar raw = res.pipe(new stream.PassThrough());\n\t\t\t\traw.once('data', function(chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\t\tresolve(output);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\toutput = new Response(body, response_options);\n\t\t\tresolve(output);\n\t\t\treturn;\n\t\t});\n\n\t\t// accept string, buffer or readable stream as body\n\t\t// per spec we will call tostring on non-stream objects\n\t\tif (typeof options.body === 'string') {\n\t\t\treq.write(options.body);\n\t\t\treq.end();\n\t\t} else if (options.body instanceof Buffer) {\n\t\t\treq.write(options.body);\n\t\t\treq.end();\n\t\t} else if (typeof options.body === 'object' && options.body.pipe) {\n\t\t\toptions.body.pipe(req);\n\t\t} else if (typeof options.body === 'object') {\n\t\t\treq.write(options.body.toString());\n\t\t\treq.end();\n\t\t} else {\n\t\t\treq.end();\n\t\t}\n\t});\n\n};\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nFetch.prototype.isRedirect = function(code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n}\n\n// expose Promise\nFetch.Promise = global.Promise;\nFetch.Response = Response;\nFetch.Headers = Headers;\nFetch.Request = Request;\n","module.exports = require(\"https\");","module.exports = require(\"zlib\");","'use strict';\n\nvar iconvLite = require('iconv-lite');\n// Load Iconv from an external file to be able to disable Iconv for webpack\n// Add /\\/iconv-loader$/ to webpack.IgnorePlugin to ignore it\nvar Iconv = require('./iconv-loader');\n\n// Expose to the world\nmodule.exports.convert = convert;\n\n/**\n * Convert encoding of an UTF-8 string or a buffer\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @param {Boolean} useLite If set to ture, force to use iconvLite\n * @return {Buffer} Encoded string\n */\nfunction convert(str, to, from, useLite) {\n    from = checkEncoding(from || 'UTF-8');\n    to = checkEncoding(to || 'UTF-8');\n    str = str || '';\n\n    var result;\n\n    if (from !== 'UTF-8' && typeof str === 'string') {\n        str = new Buffer(str, 'binary');\n    }\n\n    if (from === to) {\n        if (typeof str === 'string') {\n            result = new Buffer(str);\n        } else {\n            result = str;\n        }\n    } else if (Iconv && !useLite) {\n        try {\n            result = convertIconv(str, to, from);\n        } catch (E) {\n            console.error(E);\n            try {\n                result = convertIconvLite(str, to, from);\n            } catch (E) {\n                console.error(E);\n                result = str;\n            }\n        }\n    } else {\n        try {\n            result = convertIconvLite(str, to, from);\n        } catch (E) {\n            console.error(E);\n            result = str;\n        }\n    }\n\n\n    if (typeof result === 'string') {\n        result = new Buffer(result, 'utf-8');\n    }\n\n    return result;\n}\n\n/**\n * Convert encoding of a string with node-iconv (if available)\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @return {Buffer} Encoded string\n */\nfunction convertIconv(str, to, from) {\n    var response, iconv;\n    iconv = new Iconv(from, to + '//TRANSLIT//IGNORE');\n    response = iconv.convert(str);\n    return response.slice(0, response.length);\n}\n\n/**\n * Convert encoding of astring with iconv-lite\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @return {Buffer} Encoded string\n */\nfunction convertIconvLite(str, to, from) {\n    if (to === 'UTF-8') {\n        return iconvLite.decode(str, from);\n    } else if (from === 'UTF-8') {\n        return iconvLite.encode(str, to);\n    } else {\n        return iconvLite.encode(iconvLite.decode(str, from), to);\n    }\n}\n\n/**\n * Converts charset name if needed\n *\n * @param {String} name Character set\n * @return {String} Character set name\n */\nfunction checkEncoding(name) {\n    return (name || '').toString().trim().\n    replace(/^latin[\\-_]?(\\d+)$/i, 'ISO-8859-$1').\n    replace(/^win(?:dows)?[\\-_]?(\\d+)$/i, 'WINDOWS-$1').\n    replace(/^utf[\\-_]?(\\d+)$/i, 'UTF-$1').\n    replace(/^ks_c_5601\\-1987$/i, 'CP949').\n    replace(/^us[\\-_]?ascii$/i, 'ASCII').\n    toUpperCase();\n}\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","module.exports = require(\"string_decoder\");","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","'use strict';\n\nvar iconv_package;\nvar Iconv;\n\ntry {\n    // this is to fool browserify so it doesn't try (in vain) to install iconv.\n    iconv_package = 'iconv';\n    Iconv = require(iconv_package).Iconv;\n} catch (E) {\n    // node-iconv not present\n}\n\nmodule.exports = Iconv;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 40;","'use strict';\n\nvar isStream = module.exports = function (stream) {\n\treturn stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function';\n};\n\nisStream.writable = function (stream) {\n\treturn isStream(stream) && stream.writable !== false && typeof stream._write === 'function' && typeof stream._writableState === 'object';\n};\n\nisStream.readable = function (stream) {\n\treturn isStream(stream) && stream.readable !== false && typeof stream._read === 'function' && typeof stream._readableState === 'object';\n};\n\nisStream.duplex = function (stream) {\n\treturn isStream.writable(stream) && isStream.readable(stream);\n};\n\nisStream.transform = function (stream) {\n\treturn isStream.duplex(stream) && typeof stream._transform === 'function' && typeof stream._transformState === 'object';\n};\n","module.exports = require(\"util\");","\n/**\n * response.js\n *\n * Response class provides content decoding\n */\n\nvar http = require('http');\nvar Headers = require('./headers');\nvar Body = require('./body');\n\nmodule.exports = Response;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Response(body, opts) {\n\n\topts = opts || {};\n\n\tthis.url = opts.url;\n\tthis.status = opts.status || 200;\n\tthis.statusText = opts.statusText || http.STATUS_CODES[this.status];\n\tthis.headers = new Headers(opts.headers);\n\tthis.ok = this.status >= 200 && this.status < 300;\n\n\tBody.call(this, body, opts);\n\n}\n\nResponse.prototype = Object.create(Body.prototype);\n\n/**\n * Clone this response\n *\n * @return  Response\n */\nResponse.prototype.clone = function() {\n\treturn new Response(this._clone(this), {\n\t\turl: this.url\n\t\t, status: this.status\n\t\t, statusText: this.statusText\n\t\t, headers: this.headers\n\t\t, ok: this.ok\n\t});\n};\n","\n/**\n * request.js\n *\n * Request class contains server only options\n */\n\nvar parse_url = require('url').parse;\nvar Headers = require('./headers');\nvar Body = require('./body');\n\nmodule.exports = Request;\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nfunction Request(input, init) {\n\tvar url, url_parsed;\n\n\t// normalize input\n\tif (!(input instanceof Request)) {\n\t\turl = input;\n\t\turl_parsed = parse_url(url);\n\t\tinput = {};\n\t} else {\n\t\turl = input.url;\n\t\turl_parsed = parse_url(url);\n\t}\n\n\t// normalize init\n\tinit = init || {};\n\n\t// fetch spec options\n\tthis.method = init.method || input.method || 'GET';\n\tthis.redirect = init.redirect || input.redirect || 'follow';\n\tthis.headers = new Headers(init.headers || input.headers || {});\n\tthis.url = url;\n\n\t// server only options\n\tthis.follow = init.follow !== undefined ?\n\t\tinit.follow : input.follow !== undefined ?\n\t\tinput.follow : 20;\n\tthis.compress = init.compress !== undefined ?\n\t\tinit.compress : input.compress !== undefined ?\n\t\tinput.compress : true;\n\tthis.counter = init.counter || input.counter || 0;\n\tthis.agent = init.agent || input.agent;\n\n\tBody.call(this, init.body || this._clone(input), {\n\t\ttimeout: init.timeout || input.timeout || 0,\n\t\tsize: init.size || input.size || 0\n\t});\n\n\t// server request options\n\tthis.protocol = url_parsed.protocol;\n\tthis.hostname = url_parsed.hostname;\n\tthis.port = url_parsed.port;\n\tthis.path = url_parsed.path;\n\tthis.auth = url_parsed.auth;\n}\n\nRequest.prototype = Object.create(Body.prototype);\n\n/**\n * Clone this request\n *\n * @return  Request\n */\nRequest.prototype.clone = function() {\n\treturn new Request(this);\n};\n","const smartFunctions = {\n    \"inc\": {\n        \"arguments\": \"n, optional\",\n        \"examples\": [\"(inc)\", \"(inc 1)\"],\n        \"doc\": \"Increment existing value by 1. Works on integer. If no argument, returns 1.\",\n        \"context\": [\"all\"],\n        \"seeAlso\": [\"dec\"]\n    },\n    \"dec\":  {\n        \"arguments\": \"n, optional\",\n        \"example\": [\"(dec)\", \"(dec 10)\"],\n        \"doc\": \"Decrement existing value by 1. Works on integer. If no argument, returns -1.\",\n        \"context\": [\"all\"],\n        \"seeAlso\": [\"inc\"]\n    },\n    \"now\":  {\n        \"arguments\": \"none\",\n        \"example\": [\"(now)\"],\n        \"doc\": \"Insert current server time. Works on instant.\",\n        \"context\": [\"all\"]\n    },\n    \"==\":   {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(== 1 1 1)\", \"(== 3 4)\"],\n        \"doc\": \"Returns true if all items within the vector are equal. Works on integer, string, and boolean.\",\n        \"context\": [\"all\"],\n        \"seeAlso\": [\">=\", \">\", \"<\", \"<=\"]\n    },\n    \"+\": {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(+ 10 19 1)\", \"(+ 3 4.09)\"],\n        \"doc\": \"Returns the sum of the provided values. Works on integer and float.\",\n        \"context\": [\"all\"],\n        \"seeAlso\": [\"-\", \"*\", \"/\"]\n    },\n    \"-\":  {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(- 10 19 1)\", \"(- 30 4.09)\"],\n        \"doc\": \"Returns the difference of the numbers. The first, as the minuend, the rest as the subtrahends. Works on integer and float.\",\n        \"context\": [\"all\"],\n        \"seeAlso\": [\"+\", \"*\", \"/\"]\n    },\n    \"*\":    {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(* 10 19 1)\", \"(* 30 4.09)\"],\n        \"doc\": \"Returns the product of the provided values. Works on integer and float.\",\n        \"context\": [\"all\"],\n        \"seeAlso\": [\"-\", \"+\", \"/\"]\n    },\n    \"/\":    {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(/ 10 19 1)\", \"(/ 30 4.09)\"],\n        \"doc\": \"If only one argument supplied, returns 1/first argument, else returns first argument divided by all of the other arguments. Works on integer and float.\",\n        \"context\": [\"all\"],\n        \"seeAlso\": [\"-\", \"+\", \"+\"]\n    },\n    \">\":    {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(> 10 19 1)\", \"(> 30 4.09)\"],\n        \"doc\": \"Returns true if values are in monotonically decreasing order.\",\n        \"context\": [\"all\"],\n        \"seeAlso\": [\">=\", \"==\", \"<\", \"<=\"]\n    },\n    \">=\":     {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(>= 10 19 19)\", \"(>= 30 4.09)\"],\n        \"doc\": \"Returns true if values are in monotonically non-increasing order.\",\n        \"context\": [\"all\"],\n        \"seeAlso\": [\">\", \"==\", \"<\", \"<=\"]\n    },\n    \"<\": {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(< 10 19 1)\", \"(< 30 4.09)\"],\n        \"doc\": \"Returns true if values are in monotonically increasing order.\",\n        \"context\": [\"all\"]\n    },\n    \"<=\":     {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(<= 10 19 19)\", \"(<= 30 4.09)\"],\n        \"doc\": \"Returns true if values are in monotonically non-decreasing order.\",\n        \"context\": [\"all\"]\n    },\n    \"quot\":     {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(quot 60 10)\", \"(quot 30 4.09)\"],\n        \"doc\": \"Returns the quotient of dividing the first argument by the second argument. Rounds the answer towards 0 to return the nearest integer. Works on integer and float.\",\n        \"context\": [\"all\"]\n    },\n    \"rem\":     {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(rem 60 10)\", \"(rem 30 4.09)\"],\n        \"doc\": \"Remainder of dividing the first argument by the second argument. Works on integer and float.\",\n        \"context\": [\"all\"]\n    },\n    \"mod\":     {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(mod 60 10)\", \"(mod 30 4.09)\"],\n        \"doc\": \"Modulus of the first argument divided by the second argument. The mod function takes the rem of the two arguments, and if the either the numerator or denominator are negative, it adds the denominator to the remainder, and returns that value. Works on integer and float.\",\n        \"context\": [\"all\"]\n    },\n    \"max\":     {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(max 60 10)\", \"(mod 30 4.09)\"],\n        \"doc\": \"Returns the max of the provided values. Works on integer, float.\",\n        \"context\": [\"all\"]\n    },\n    \"min\":     {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(min 60 10)\", \"(min 30 4.09)\"],\n        \"doc\": \"Returns the min of the provided values. Works on integer, float.\",\n        \"context\": [\"all\"]\n    },\n    \"max-pred-val\":    {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(max-pred-val \\\"person/age\\\")\"],\n        \"doc\": \"Returns the max of the provided predicate. Works on integer, float\",\n        \"context\": [\"all\"]\n    },\n    \"str\":     {\n        \"arguments\": \"arg1, arg2, arg3...\",\n        \"example\": [\"(str \\\"flur\\\" \\\".ee\\\")\"],\n        \"doc\": \"Concatenates all strings in the vector. Works on integer, string, float, and boolean.\",\n        \"context\": [\"all\"]\n    },\n    \"if-else\":    {\n        \"arguments\": \"test true false\",\n        \"example\": [\"(if-else (== 1 2) \\\"You were right!\\\" \\\"Boo!\\\")\"],\n        \"doc\": \"Takes a test as a first argument. If the test succeeds, return the second argument, else return the third argument.\",\n        \"context\": [\"all\"]\n    },\n    \"and\":     {\n        \"arguments\": \"arg1 arg2 ...\",\n        \"example\": [\"(and (== 1 1) (== 2 2)\"],\n        \"doc\": \"Returns true if all objects within the vector are non-nil and non-false, else returns false.\",\n        \"context\": [\"all\"]\n    },\n    \"or\":  {\n        \"arguments\": \"arg1 arg2 ...\",\n        \"example\": [\"(or (== 1 1) (== 2 2)\"],\n        \"doc\": \"Returns true if any of the objects within the vector are non-nil and non-false, else returns false.\",\n        \"context\": [\"all\"]\n    },\n    \"boolean\":  {\n        \"arguments\": \"x\",\n        \"example\": [\"(boolean 1)\", \"(boolean \\\"apple\\\")\"],\n        \"doc\": \"Coerces any non-nil and non-false value to true, else returns false.\",\n        \"context\": [\"all\"]\n    },\n    \"nil?\": {\n        \"arguments\": \"x\",\n        \"example\": [\"(nil? 1)\", \"(nil? \\\"apple\\\")\"],\n        \"doc\": \"If nil, returns true, else returns false.\",\n        \"context\": [\"all\"]\n    },\n    \"count\":  {\n        \"arguments\": \"[s] or string\",\n        \"example\": [\"(count [1 2 3])\", \"(count \\\"here's some words\\\")\"],\n        \"doc\": \"If nil, returns true, else returns false.\",\n        \"context\": [\"all\"]\n    },\n    \"get\": {\n        \"arguments\": \"subject predicate\",\n        \"example\": [\"(get (query \\\"{\\\\\\\"select\\\\\\\":[\\\\\\\"*\\\\\\\"],\\\\\\\"from\\\\\\\":[\\\\\\\"person/handle\\\\\\\", \\\\\\\"jdoe\\\\\\\"]}\\\") \\\"_id\\\")\"],\n        \"doc\": \"Returns the value of an predicate within an object. In this example, we extract the _id of the person using get.\",\n        \"context\": [\"all\"]\n    },\n    \"contains?\":  {\n        \"arguments\": \"subject value\",\n        \"example\": [\"(contains? (get-all (query \\\"{\\\\\\\"select\\\\\\\":[\\\\\\\"*\\\\\\\"],\\\\\\\"from\\\\\\\":[\\\\\\\"person/handle\\\\\\\", \\\\\\\"jdoe\\\\\\\"]}\\\") [\\\"person/user\\\" \\\"_id\\\"]) 123)\"],\n        \"doc\": \"Checks whether an object or hash-set contains a specific key (for objects) or value (for hash-sets). Vectors check index and NOT value. To check values of vector, convert values to hash-set first. In this example, get-all checks whether the person user contains the current user.\",\n        \"context\": [\"all\"]\n    },\n    \"hash-set\":  {\n        \"arguments\": \"arg1 arg2\",\n        \"example\": [\"(hash-set \\\"orange\\\" \\\"pear\\\")\"],\n        \"doc\": \"Returns hash-set containing all the args\",\n        \"context\": [\"all\"]\n    },\n    \"upper-case\":  {\n        \"arguments\": \"str\",\n        \"example\": [\"(upper-case \\\"pear\\\")\"],\n        \"doc\": \"Returns upper-case version of string.\",\n        \"context\": [\"all\"]\n    },\n    \"lower-case\":  {\n        \"arguments\": \"str\",\n        \"example\": [\"(lower-case \\\"pear\\\")\"],\n        \"doc\": \"Returns lower-case version of string.\",\n        \"context\": [\"all\"]\n    },\n    \"nth\":  {\n        \"arguments\": \"collection integer\",\n        \"example\": [\"(nth [1 2 3] 0)\"],\n        \"doc\": \"Returns the nth element in a collection, for example (nth [1 2 3] 0) returns 1.\",\n        \"context\": [\"all\"]\n    },\n    \"get-all\":  {\n        \"arguments\": \"subject [path]\",\n        \"example\": [\"(get-all (query \\\"{\\\\\\\"select\\\\\\\":[\\\\\\\"*\\\\\\\"],\\\\\\\"from\\\\\\\":[\\\\\\\"person/handle\\\\\\\", \\\\\\\"jdoe\\\\\\\"]}\\\")  [\\\"person/user\\\" \\\"_id\\\"])\"],\n        \"doc\": \"Returns nil or a set of all of a certain predicate (or predicate-path) from an subject.\",\n        \"context\": [\"all\"]\n    },\n    \"valid-email?\":  {\n        \"arguments\": \"x\",\n        \"example\": [\"(valid-email? (?o))\"],\n        \"doc\": \"Checks whether an object or hash-set contains a specific key (for objects) or value (for hash-sets). Vectors check index and NOT value. To check values of vector, convert values to hash-set first. In this example, get-all checks whether the person user contains the current user.\",\n        \"context\": [\"all\"]\n    },\n    \"re-find\":  {\n        \"arguments\": \"subject value\",\n        \"example\": [\"(re-find \\\"^[a-zA-Z0-9_][a-zA-Z0-9\\.\\-_]{0,254}\\\" \\\"apples1\\\")\"],\n        \"doc\": \"Checks whether a string follows a given regex pattern.\",\n        \"context\": [\"all\"]\n    },\n    \"query\":  {\n        \"arguments\": \"query-string (0.9.6+) OR select-string, from-string, where-string, block-string, limit-string\",\n        \"example\": [\"(query \\\"{\\\\\\\"select\\\\\\\": [\\\\\\\"*\\\\\\\"], \\\\\\\"from\\\\\\\": \\\\\\\"_collection\\\\\\\"}\\\")\",\n    \"(query \\\"[*]\\\" [\\\"book/editor\\\" \\\"Penguin\\\"] nil nil nil)\"],\n        \"doc\": \"Queries the current database. Make sure to doubly-escape the quotation marks in the query string\",\n        \"context\": [\"all\"]\n    },\n    \"?s\": {\n        \"arguments\": \"string (optional)\",\n        \"example\": [\"(s)\"],\n        \"doc\": \"Allows you to access all the predicates of the subject that the spec is being applied to. This function takes an optional string of additional-select-parameters. By default, this function will query {\\\"select\\\": [\\\"*\\\"], from: SUBJECT}, however, if you would like to follow the subject's relationships further, you can optionally include an additional select string. You do not need to include the glob character, *, in your select string. You can either not include any quotes in the select string, or doubly-escape them, for example: `\\\"[{person/user []}]\\\" or \\\"[{\\\\\\\"person/user\\\\\\\" [\\\\\\\"*\\\\\\\"]}]\\\"`. Your select string needs to be inside of a vector, [].\",\n        \"context\": [\"_predicate/spec\", \"_collection/spec\", \"_rule/fns\"]\n    },\n    \"?sid\": {\n        \"arguments\": \"select-string, from-string, where-string, block-string, limit-string\",\n        \"example\": [\"(query \\\"[*]\\\" [\\\"book/editor\\\" \\\"Penguin\\\"] nil nil nil)\"],\n        \"doc\": \"The _id of the subject that the spec is being applied to\",\n        \"context\": [\"_predicate/spec\", \"_collection/spec\", \"_rule/fns\"]\n    },\n    \"?p\": {\n        \"arguments\": \"string (optional)\",\n        \"example\": [\"(p)\"],\n        \"doc\": \"Allows you to access all the predicates of the predicate that the spec is being applied to. This function takes an optional string of additional-select-parameters. By default, this function will query {\\\"select\\\": [\\\"*\\\"], from: PREDICATE_ID }, however, if you would like to follow the predicate's relationships further, you can optionally include an additional select string. You do not need to include the glob character, *, in your select string. You can either not include any quotes in the select string, or doubly-escape them, for example: `\\\"[{person/user []}]\\\" or \\\"[{\\\\\\\"person/user\\\\\\\" [\\\\\\\"*\\\\\\\"]}]\\\"`. Your select string needs to be inside of a vector, [].\",\n        \"context\": [\"_predicate/spec\", \"_predicate/txSpec\", \"_collection/spec\", \"_rule/fns\"]\n    },\n    \"?pid\": {\n        \"arguments\": \"none\",\n        \"example\": [\"(?pid)\"],\n        \"doc\": \"_id of the predicate that the spec is being applied to\",\n        \"context\": [\"_predicate/spec\", \"_predicate/txSpec\", \"transaction\"]\n    },\n    \"?o\": {\n        \"arguments\": \"none\",\n        \"example\": [\"(< 1000 (?o))\"],\n        \"doc\": \"The proposed object of the predicate that the user is attempting to add or update.\",\n        \"context\": [\"_predicate/spec\"]\n    },\n    \"?pO\": {\n        \"arguments\": \"none\",\n        \"example\": [\"(< (?pO) (?o))\"],\n        \"doc\": \"The object of the predicate that the user is attempting to add or update, as of the block before the proposed transaction\",\n        \"context\": [\"_predicate/spec\"]\n    },\n    \"?auth_id\": {\n        \"arguments\": \"none\",\n        \"example\": [\"(== (?auth_id) (?sid))\"],\n        \"doc\": \"The _id of the auth that is querying or transacting\",\n        \"context\": [\"_predicate/spec\", \"_collection/spec\", \"_rule/fns\", \"transaction\"]\n    },\n    \"flakes\": {\n        \"arguments\": \"none\",\n        \"example\": [\"(flakes)\"],\n        \"doc\": \"Returns an array of all flakes in the current proposed transaction. For _predicate/spec and _collection/spec this is a single flake. For _predicate/txSpec this is all the flakes in a given transaction that pertain to the specified predicate.\",\n        \"context\": [\"_predicate/spec\", \"_collection/spec\", \"_predicate/txSpec\"]\n    },\n    \"objT\": {\n        \"arguments\": \"none\",\n        \"example\": [\"(objT)\"],\n        \"doc\": \"Sum of the value of all flakes being added in the current spec.\",\n        \"context\": [\"_predicate/spec\", \"_collection/spec\", \"_predicate/txSpec\"]\n    },\n    \"objF\": {\n        \"arguments\": \"none\",\n        \"example\": [\"(objF)\"],\n        \"doc\": \"Sum of the value of all flakes being retracted in the current spec.\",\n        \"context\": [\"_predicate/spec\", \"_collection/spec\", \"_predicate/txSpec\"]\n    },\n    \"relationship?\": {\n        \"arguments\": \"startSubject path endSubject\",\n        \"example\": \"(relationship? [\\\"_user/username\\\" \\\"anna\\\"] [\\\"_user/auth\\\" \\\"_auth/department\\\" \\\"company/_department\\\"] [\\\"company/name\\\" \\\"Fluree\\\"])\",\n        \"doc\": \"0.9.6+ Returns a true or false, depending on if there is a relationship between two subjects. Start and end subjects should resolve to either subject _ids or unique two-tuples. \",\n        \"context\": [\"all\"]\n    }\n}\n\nmodule.exports = {\n    smartFunctions\n}"],"sourceRoot":""}