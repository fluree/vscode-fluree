(()=>{"use strict";var e={530:(e,t,o)=>{var n=o(315);e.exports=function(e,t){return/^\/\//.test(e)&&(e="https:"+e),n.call(this,e,t)},global.fetch||(global.fetch=e.exports,global.Response=n.Response,global.Headers=n.Headers,global.Request=n.Request)},56:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.hasApiKey=t.fetchMigrations=t.checkExitPromise=t.sendReq=t.getCurrentSelection=t.getConfigFile=void 0;const n=o(147),r=o(496),s=o(530);function i(e){return e.json().then((function(t){return Object.assign(e,{json:t})})).catch((e=>{let t=e.message||e;r.window.showErrorMessage(JSON.stringify(t))}))}function a(e){let t={};return e.filter((e=>e.block>1&&e.asserted[0])).sort(((e,t)=>e.block-t.block)).reduce(((e,o)=>{const n=o.asserted.map((e=>(t[e._id]?e._id=t[e._id]:(t[e._id]=Object.keys(e).some((e=>/^_collection/.test(e)))?["_collection/name",e["_collection/name"]]:["_predicate/name",e["_predicate/name"]],e._id=Object.keys(e).some((e=>/^_collection/.test(e)))?"_collection":"_predicate"),e)));return e[o.block]?e[o.block]=[...e[o.block],...n]:e[o.block]=n,e}),{})}t.hasApiKey=function(e){return void 0!==e&&0!==e.length},t.getConfigFile=function(e){let t=e[0].path;return r.workspace.openTextDocument(t).then((e=>{const t=e.getText(),o=JSON.parse(t),{network:n,db:r,ip:s,apiKey:i}=o})),{network:"",db:"",ip:"",apiKey:""}},t.getCurrentSelection=function(){const e=r.window.activeTextEditor;if(e){const t=e.selection;return e.document.getText(t)}},t.sendReq=async function(e,t,o={}){const n={"content-type":"application/json",...o};return s(e,{headers:n,method:"POST",body:t}).then((e=>i(e))).then((e=>e.json)).then((e=>{let t=e.status;return console.log(t),"db/invalid-action"===e.error?r.window.showInformationMessage(` Are you using a version of Fluree that supports this endpoint? ${t?`Status: ${t}`:""}. Check flureeResponse.txt`):e})).catch((e=>{let t=e.message||e;console.log("error: ",e),r.window.showErrorMessage(JSON.stringify(t))}))},t.checkExitPromise=function(e,t){if(void 0===e)throw new Error(`The user exited ${t}`);return!0},t.fetchMigrations=function(e,t,o={}){return function(e,t={}){return s(`${e}/query`,{method:"POST",headers:{"content-type":"application/json",...t},body:JSON.stringify({selectDistinct:"?s",where:[{union:[[["?s","rdf:type","_collection"]],[["?s","rdf:type","_predicate"]]]}],opts:{limit:9999}})}).then((e=>i(e))).then((e=>e.json))}(e,o).then((t=>async function(e,t,o={}){if(e.error)throw new Error(e.message||e.error);const n=e.map((e=>()=>function(e,t,o={}){return s(`${e}/history`,{method:"POST",headers:{"content-type":"application/json",...o},body:JSON.stringify({history:t,prettyPrint:!0})}).then((e=>e.json())).catch((e=>{throw e}))}(t,e,o)));let r=0;const i=[];for(;n.length>r;){const e=await Promise.all(n.slice(r,r+20).map((e=>e())));i.push(...e.flat()),r+=20}return i}(t,e,o))).then(a).then((e=>function(e,t){return new Promise(((o,r)=>{n.mkdirSync(`${t}/migrations`,{recursive:!0}),o(e)}))}(e,t))).then((e=>function(e,t){return Object.keys(e).forEach((async(o,r)=>{await n.writeFile(`${t}/migrations/${String(r).padStart(5,"0")}.json`,JSON.stringify(e[o]),(e=>{if(e)throw e}))})),r.window.showInformationMessage("Success. Check migrations/ in your root directory")}(e,t))).catch((e=>{let t=e.message||e;return r.window.showErrorMessage(JSON.stringify(t))}))}},496:e=>{e.exports=require("vscode")},315:e=>{e.exports=require("node-fetch")},147:e=>{e.exports=require("fs")}},t={};function o(n){var r=t[n];if(void 0!==r)return r.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,o),s.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=void 0;const t=o(496),r=o(56),s=e=>t.workspace.openTextDocument({language:"json",content:JSON.stringify(e,null,2)}).then((e=>t.window.showTextDocument(e)));function i(e,o){const n=t.workspace.getConfiguration("fluree",null);try{n.update(e,o,t.ConfigurationTarget.Global)}catch(e){console.log("update error: ",e)}}e.activate=async function(e){let o=t.workspace.getConfiguration("fluree",null),n=t.workspace.rootPath,a=t.commands.registerCommand("extension.setTestConfig",(()=>{})),c=t.commands.registerCommand("extension.setNexusConfig",(()=>{t.window.showInputBox({prompt:"Please input the connection string found on the Connect tab of your Nexus dataset page ",value:""}).then((e=>{if(e){const o=new URL(e),n=o.host,r=o.pathname,[s,a,c,u]=r.split("/");return i("network",c),i("db",u),i("host",`https://${n}`),t.window.showInputBox({prompt:"Please enter the api_key you created on the Nexus dataset Connect tab",value:""})}})).then((e=>{e&&i("apiKey",e)})).then((e=>{o=t.workspace.getConfiguration("fluree",null),t.window.showInformationMessage("Config set. Network: "+o.network+" Db: "+o.db+" Host: "+o.host+" apiKey: "+(o.apiKey||""))}))})),u=t.commands.registerCommand("extension.setConfig",(()=>{t.window.showInputBox({prompt:"Please input the host address (and port) where your db is running. For example: http://localhost:8090: ",value:o.host||""}).then((e=>{if(e)return i("host",e),t.window.showInputBox({prompt:"Please input the network your database is in: ",value:o.network||""})})).then((e=>{if(e)return i("network",e),t.window.showInputBox({prompt:"Please input your database name: ",value:o.db||""})})).then((e=>{if(e)return i("db",e),t.window.showInputBox({prompt:"Please input your api key if using Nexus: ",value:o.apiKey||""})})).then((e=>{e&&i("apiKey",e)})).then((e=>{o=t.workspace.getConfiguration("fluree",null),t.window.showInformationMessage("Config set. Network: "+o.network+" Db: "+o.db+" Host: "+o.host+" apiKey: "+(o.apiKey||""))}))})),l=t.commands.registerCommand("extension.getConfig",(()=>{o=t.workspace.getConfiguration("fluree",null),t.window.showInformationMessage("Config. Network: "+o.network+" Db: "+o.db+" Host: "+o.host+" apiKey: "+(o.apiKey||""))})),h=t.commands.registerCommand("extension.submitTransaction",(()=>{if(0!==Object.keys(o).length){let e=(0,r.getCurrentSelection)()||"",t=`${o.host}/fdb/${o.network}/${o.db}/transact`,n={};return(0,r.hasApiKey)(o.apiKey)&&(n={authorization:`Bearer ${o.apiKey}`}),(0,r.sendReq)(t,e,n).then((e=>s(e))).catch((e=>console.log("error: ",e)))}t.window.showErrorMessage("Please connect to a database first. `Fluree: Set Config`")})),d=t.commands.registerCommand("extension.submitQuery",(()=>{if(0===Object.keys(o).length)t.window.showErrorMessage("Please connect to a database first. `Fluree: Set Config`");else{let e=(0,r.getCurrentSelection)()||"",t=`${o.host}/fdb/${o.network}/${o.db}/query`,n={};(0,r.hasApiKey)(o.apiKey)&&(n={authorization:`Bearer ${o.apiKey}`}),(0,r.sendReq)(t,e,n).then((e=>s(e))).catch((e=>console.log("error: ",e)))}})),p=t.commands.registerCommand("extension.submitHistoryQuery",(()=>{if(0!==Object.keys(o).length){let e=(0,r.getCurrentSelection)()||"",t=`${o.host}/fdb/${o.network}/${o.db}/history`,n={};return(0,r.hasApiKey)(o.apiKey)&&(n={authorization:`Bearer ${o.apiKey}`}),(0,r.sendReq)(t,e,n).then((e=>s(e))).catch((e=>console.log("error: ",e)))}t.window.showErrorMessage("Please connect to a database first. `Fluree: Set Config`")})),g=t.commands.registerCommand("extension.submitBlockQuery",(()=>{if(0!==Object.keys(o).length){let e=(0,r.getCurrentSelection)()||"",t=`${o.host}/fdb/${o.network}/${o.db}/block`,n={};return(0,r.hasApiKey)(o.apiKey)&&(n={authorization:`Bearer ${o.apiKey}`}),(0,r.sendReq)(t,e,n).then((e=>s(e))).catch((e=>console.log("error: ",e)))}t.window.showErrorMessage("Please connect to a database first. `Fluree: Set Config`")})),w=t.commands.registerCommand("extension.submitMultiQuery",(()=>{if(0!==Object.keys(o).length){let e=(0,r.getCurrentSelection)()||"",t=`${o.host}/fdb/${o.network}/${o.db}/multi-query`,n={};return(0,r.hasApiKey)(o.apiKey)&&(n={authorization:`Bearer ${o.apiKey}`}),(0,r.sendReq)(t,e,n).then((e=>s(e))).catch((e=>console.log("error: ",e)))}t.window.showErrorMessage("Please connect to a database first. `Fluree: Set Config`")})),f=t.commands.registerCommand("extension.submitQueryWith",(()=>{if(0!==Object.keys(o).length){let e=(0,r.getCurrentSelection)()||"",t=`${o.host}/fdb/${o.network}/${o.db}/query-with`,n={};return(0,r.hasApiKey)(o.apiKey)&&(n={authorization:`Bearer ${o.apiKey}`}),(0,r.sendReq)(t,e,n).then((e=>s(e))).catch((e=>console.log("error: ",e)))}t.window.showErrorMessage("Please connect to a database first. `Fluree: Set Config`")})),m=t.commands.registerCommand("extension.submitGenFlakes",(()=>{if(0!==Object.keys(o).length){let e=(0,r.getCurrentSelection)()||"",t=`${o.host}/fdb/${o.network}/${o.db}/gen-flakes`,n={};return(0,r.hasApiKey)(o.apiKey)&&(n={authorization:`Bearer ${o.apiKey}`}),(0,r.sendReq)(t,e,n).then((e=>s(e))).catch((e=>console.log("error: ",e)))}t.window.showErrorMessage("Please connect to a database first. `Fluree: Set Config`")})),y=t.commands.registerCommand("extension.submitTestTransactWith",(()=>{if(0!==Object.keys(o).length){let e=(0,r.getCurrentSelection)()||"",t=`${o.host}/fdb/${o.network}/${o.db}/test-transact-with`,n={};return(0,r.hasApiKey)(o.apiKey)&&(n={authorization:`Bearer ${o.apiKey}`}),(0,r.sendReq)(t,e,n).then((e=>s(e))).catch((e=>console.log("error: ",e)))}t.window.showErrorMessage("Please connect to a database first. `Fluree: Set Config`")})),b=t.commands.registerCommand("extension.getMigrations",(()=>{if(0!==Object.keys(o).length){let e=`${o.host}/fdb/${o.network}/${o.db}`,t={};return(0,r.hasApiKey)(o.apiKey)&&(t={authorization:`Bearer ${o.apiKey}`}),(0,r.fetchMigrations)(e,n||"/tmp",t)}t.window.showErrorMessage("Please connect to a database first. `Fluree: Set Config`")}));e.subscriptions.push(a,c,u,l,h,d,p,g,w,f,m,y,b)},e.deactivate=function(){}})(),module.exports=n})();